#! /bin/sh
### BEGIN INIT INFO
# Provides:          gvar_reader
# Required-Start:    $local_fs $network $syslog
# Required-Stop:     $local_fs $network $syslog
# Should-Start: $syslog
# Should-Stop: $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: GVAR Reader
# Description:       The GVAR Reader monitors the GVAR input stream, and adds new grass database records as new scenes come into place.
### END INIT INFO

# Author: Quinn Hart <qjhart@ucdavis.edu>
#
# Please remove the "Author" lines above and replace them
# with your own name if you copy and modify this script.

# source function library
. /etc/rc.d/init.d/functions

prog=gvar_reader
lockfile=/var/lock/subsys/$prog
pidfile=/var/run/$prog.pid

# Read configuration variable file if it is present
[ -r /etc/default/$prog ] && . /etc/default/$prog

exec="/usr/bin/grass"

# Exit if the package is not installed
[ -x "/usr/sbin/daemonize" ] || exit 0
[ -x "$exec" ] || exit 0

export GRASS_ADDON_PATH;
export GRASS_BATCH_JOB=$GVAR_READER_BATCH_JOB
args="-text ${GISDBASE}/${GVAR_READER_LOCATION_NAME}/${MAPSET}"

#
# Function that starts the daemon/service
#
start()
{
    echo -n "Staring $prog: $GVAR_READER_SERVER:$GVAR_READER_PORT"
    daemon /usr/sbin/daemonize -v -u ${CG_USER} -p $pidfile -l $lockfile -o ${GVAR_READER_STDOUT} -e ${GVAR_READER_STDERR} $exec $args
    retval=$?
    echo
#    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

#
# Function that stops the daemon/service
#
stop() {
	echo -n $"Stopping $prog: "
	killproc $prog -p $pidfile
	retval=$?
	echo
	[ $retval -eq 0 ] && rm -f $lockfile
	return $retval
}

restart() {
	stop
	start
}

reload() {
	restart
}

force_reload() {
	restart
}

fdr_status() {
	status $prog -p $pidfile
}


case "$1" in
	start|stop|restart|reload)
  		$1
		;;
	force-reload)
		force_reload
		;;
	status)
		fdr_status
		;;
	condrestart|try-restart)
		[ -f $lockfile ] && restart
		;;
	*)
		echo $"Usage: $0 {start|stop|status|restart|try-restart|reload|force-reload}"
		exit 1
esac
